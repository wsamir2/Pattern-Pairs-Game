<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="disposeCardTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRestartGame.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>57</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB4ED99eRJA4HkSQOB5EkDgeRJA4HkSQOB5EkDgdBVC2mvSimtsJUnNbBRE4GwU
        ROBsFETgbBRE4GwTQ7sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHoUP7HTjln/9b1j//W9Y//1vWP/9b1j//W9Y/94IEb0a9GK/2va
        jP9r1Ir/a9SK/2vUiv9r1Ir/bA5B7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAehQ/sdqXW///y2b//8tm///LZv/9yWb/xnxV/3MS
        Qflr0Yr/a+OQ/2vjkP9r45D/a+OQ/2vjkP9rDkHuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6FD+x2pdb///LZv//y2b//8tm/7Jq
        VPZsS1j3a1hd+Gvcjf9r45D/a+OQ/2vjkP9r45D/a+OQ/2sOQe4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHoUP7Hal1v//8tm///L
        Zv//y2b/p1pR9WyLb/drh277a9+O/2vjkP9r45D/a+OQ/2vjkP9r45D/aw5B7gAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAehQ/sdqX
        W///y2b//8tm///LZv/5w2T/7b5m83gjRvNr0Yr/a9aM/2xCVO9sOFHta8yH/2vjkP9rDkHuAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB6FD+x2pdb///LZv//y2b//8tm///LZv//y2b/eSRG82vRiv9qhW3+awk+j2wEPnRsaWP1a+OQ/2sO
        Qe4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHAUSLBtEEf5bRBH+YQsS/fRjFn/bQY//W0WS/dvE0fybQ9C7W0PQu1tDECPbARAdG0P
        QuxtD0LtbBBBywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAaBZPsU6jzv9NqNP/gjFR88yFWP9jPnHxRNn//02s1rAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoFk+xTqPO/0TY/v9aaJn1Yz1x8Uq34P9E2f//Zx9Z7GgT
        TaxqADowAAAAAAAAAAAAAAAAAAAAAHAAQBBtAz5iAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgWT7FOo87/RNn//0TZ//9E2f//RNn//0TZ
        //9RjLr+UZLA/2kQSuEAAAAAAAAAAAAAAABuAz9RawdI6WsRXPVsBUNjAAAAAXQARgsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaBZPsU6jzv9E2f//RNn//0TZ
        //9E2f//RNn//1pfkfZcWIv1aRBLzAAAAABrADYTbwA8HmwDQvBpRL//Z1zt/2wIS+1qRr6aawZJ7mwA
        Pi0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoFk+xTqPO/0TZ
        //9E2f//RNn//0TZ//9E2f//Zx5Y7GsAPWlmAEQPagNDY2wEQ/ZrAj9yagA/amoym/dnZv//aUrJ/WdY
        4/9qM537awI/cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgW
        T7FOo87/R8fv/0TY/v9Ixe3/Sbzl/0m85f9nG1PvZgBAFGsFSY9rGGrzaFLY/2wQW+9rDlbvaFjk/2dm
        //9nZv//aiyQ+msERORoADkbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAaRBLbVSItl5lJF2wTZ3KVmYhWbRoE03NaBNNzWoPScBgAEAIawA8N2sOV/BnZPv/Z2b//2dm
        //9nZv//Z2b//2dm//9oWef/awdJ6mkAPBEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAhLnGk0
        n/dnZv//Z2b//2dm//9nZv//Z2b//2dl/f9rIHf4bAREhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABmADMKbAhK52dW4P9nZv//Z2b//2dm//9oWOT/axVk72sHSrdmAEAUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABrAEFDahJf8Gdl/f9nZPz/aTWh92wIS+hvBD1HAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsCUutai2R+2sPWPBrCEyddABGCwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEAORJsB0i7bQA7OAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////AAH//wAB//8AAf//AAH//wA
        B//8AAf//AAH//wAB//8A////ADz//wA4H/8AIA//AAAP/wAAD/8AAA///8AP///AD///4D////B////
        x/////////////////////////////////8=
</value>
  </data>
</root>